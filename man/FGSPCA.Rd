% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FGSPCAUtils.R
\name{FGSPCA}
\alias{FGSPCA}
\title{Feature Grouping and Sparse PCA with L2 loss function.}
\usage{
FGSPCA(
  x,
  B_init,
  K,
  para,
  type = "predictor",
  use.corr = FALSE,
  max.iter = 200,
  trace = TRUE,
  eps.conv = 0.001,
  tau_S = 0.05,
  lambda2 = 0.1,
  lambda3 = 0.1,
  v = 1,
  c = 1.02,
  iter_m_max = 100,
  iter_k_max = 50,
  condition_tol = 1e-05,
  nnConstraint = FALSE,
  sparseTruncated = TRUE
)
}
\arguments{
\item{x}{the data matrix \eqn{X}}

\item{B_init}{the initial value of matrix \eqn{B}}

\item{K}{the number of principal components}

\item{para}{a list of \eqn{\lambda_1} with its length being \code{K}}

\item{type}{type of \eqn{X}, which can take values of \code{type=c("predictor", "Gram")}.
If \code{type="Gram"} the model should deal with the root matrix of \eqn{X}.
If \code{type="predictor"} the model should directly deal with the matrix \eqn{X}.}

\item{use.corr}{\code{FALSE} (default).
When \code{type="predictor"} we need to scale the data, \code{scale=use.corr} .}

\item{max.iter}{\code{200} (default) the max iteration of the \code{A-B} updating procedure}

\item{trace}{\code{TRUE} (default) whether to do the print or not
(print the number of the current iteration and the error at the iteration)}

\item{eps.conv}{\eqn{1e-3} (default) the convergence criterion for the \code{A-B} updating procedure}

\item{tau_S}{\eqn{\tau}, a global \eqn{\tau}, which is assigned to \eqn{\tau_1=\tau_2=\tau .}}

\item{lambda2}{\eqn{\lambda_2}, the tuning parameter corresponding to \eqn{p_2(\cdot)}}

\item{lambda3}{\eqn{\lambda_3}, the tuning parameter corresponding to \eqn{p_3(\cdot)}}

\item{v}{the initial value of the Lagrange multiplier, with default \code{v=1.0}.}

\item{c}{the acceleration constant to speed up the convergence procedure, default \code{c=1.02}.}

\item{iter_m_max}{the maximum number of the outer iterations (i.e. the m-iteration), default \code{iter_m_max=100}}

\item{iter_k_max}{the maximum number of the inner iterations (i.e. the k-iteration), default \code{iter_k_max=50}}

\item{condition_tol}{the conditional tolerance of both the outer and inner iterations, default \code{condition_tol=1e-5}}

\item{nnConstraint}{Boolean, indicating the non-negative constraint is true or false, default \code{FALSE}}

\item{sparseTruncated}{Boolean, indicating whether to use the truncated L1 penalty or not for sparsity,
default \code{TRUE}}
}
\value{
pev Percentage of Explained Variance

var.all the total variance

loadings the final normalized loadings of \eqn{B}

Alpha the final eqn{A} from the last update

ab_errors the \code{A-B} updating errors

type (same as the input) the type of matrix \eqn{X}

K (same as the input) the number of principal components

para (same as the input) a list of \eqn{\lambda_1} with its length being \code{K}

lambda2 (same as the input) \eqn{\lambda_2}

lambda3 (same as the input) \eqn{\lambda_3}

vn variable names

Mloss a matrix of loss with shape of \eqn{i\times K},
where \eqn{i} is the number of iterations.

Gloss global loss

Sloss sum loss

Tloss tail loss

LossList with each element being a list of the objective values of each subproblem.
\eqn{K*(i-1) + j} .
}
\description{
Feature Grouping and Sparse PCA with L2 loss function.
}
\details{
The main function of the FGSPCA problem with L2 loss using the alternating updating,
which updates \eqn{A} while fixing \eqn{B} and updates \eqn{B} while fixing \eqn{A}.
}
\examples{
library(elasticnet)  # to use the data "pitprop"
library(sparsepca)
data(pitprops)
# ## elasticnet::spca is the Sparse PCA of Zou (2006).
K <- 6
para <- c(0.06, 0.16, 0.1, 0.5, 0.5, 0.5)
out1 <- elasticnet::spca(
  pitprops, K=6, type="Gram", sparse="penalty", trace=TRUE,
  para=c(0.06,0.16,0.1,0.5,0.5,0.5))

K <- k <- 6
X <- rootmatrix(pitprops)
rspca.results <- sparsepca::rspca(X, k, alpha=1e-3, beta=1e-3, center=TRUE, scale=FALSE)

K <- 6
B_init <- rspca.results$loadings
tau_S=0.05; lambda1=0.01; lambda2=0.01; lambda3=0.1
para <- rep(lambda1, K)

out <- FGSPCA(
  pitprops, B_init, K, para, type="Gram",
  tau_S=tau_S, lambda2=lambda2, lambda3=lambda3)
NB <- out$loadings  # the normalized loadings of FGSPCA

(fgspca.pev <- round(out$pev *100, 3))
(fgspca.cpev <- round(cumsum(out$pev) * 100, 3))

}
